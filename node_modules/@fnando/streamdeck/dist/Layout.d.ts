export declare class Layout {
    static readonly ICON_LAYOUT: string;
    static readonly CANVAS_LAYOUT: string;
    static readonly VALUE_LAYOUT: string;
    static readonly INDICATOR_LAYOUT: string;
    static readonly GRADIENT_INDICATOR_LAYOUT: string;
    static readonly DOUBLE_INDICATOR_LAYOUT: string;
    id: string;
    items: [LayoutItem?];
    constructor(id: string);
    insertPlaccard(item: PlaccardItem): void;
    insertPixmap(item: PixmapItem): void;
    insertBar(item: BarItem): void;
    insertGbar(item: GbarItem): void;
    insertText(item: TextItem): void;
}
type LayoutItem = {
    key: string;
    type: string;
    rect: [number, number, number, number];
    zOrder?: number;
    enabled?: boolean;
    opacity?: number;
    background?: string;
};
type PlaccardItem = LayoutItem;
type PixmapItem = LayoutItem & {
    value: string;
};
type BarItem = LayoutItem & {
    value: string;
    subtype?: 0 | 1 | 2 | 3 | 4;
    border_w?: number;
    bar_bg_c?: string;
    bar_border_c?: string;
    bar_fill_c?: string;
};
type GbarItem = LayoutItem & {
    value: string;
    subtype?: 0 | 1 | 2 | 3 | 4;
    border_w?: number;
    bar_bg_c?: string;
    bar_border_c?: string;
    bar_h?: number;
};
type TextItem = LayoutItem & {
    value: string;
    font?: TextItemFont;
    color?: string;
    alignment?: "left" | "center" | "right";
};
type TextItemFont = {
    size?: number;
    weight?: number;
};
export {};
